
package kotlin.html5

    public fun HtmlBodyTag.a(id: String? = null, c: StyleClass? = null, contents: A.() -> Unit = empty_contents): Unit = contentTag(A(this), c, id, contents)
    public fun HtmlBodyTag.abbr(id: String? = null, c: StyleClass? = null, contents: ABBR.() -> Unit = empty_contents): Unit = contentTag(ABBR(this), c, id, contents)
    public fun HtmlBodyTag.address(id: String? = null, c: StyleClass? = null, contents: ADDRESS.() -> Unit = empty_contents): Unit = contentTag(ADDRESS(this), c, id, contents)
    public fun HtmlBodyTag.area(id: String? = null, c: StyleClass? = null, contents: AREA.() -> Unit = empty_contents): Unit = contentTag(AREA(this), c, id, contents)
    public fun HtmlBodyTag.article(id: String? = null, c: StyleClass? = null, contents: ARTICLE.() -> Unit = empty_contents): Unit = contentTag(ARTICLE(this), c, id, contents)
    public fun HtmlBodyTag.aside(id: String? = null, c: StyleClass? = null, contents: ASIDE.() -> Unit = empty_contents): Unit = contentTag(ASIDE(this), c, id, contents)
    public fun HtmlBodyTag.audio(id: String? = null, c: StyleClass? = null, contents: AUDIO.() -> Unit = empty_contents): Unit = contentTag(AUDIO(this), c, id, contents)
    public fun HtmlBodyTag.b(id: String? = null, c: StyleClass? = null, contents: B.() -> Unit = empty_contents): Unit = contentTag(B(this), c, id, contents)
    public fun HtmlBodyTag.bdi(id: String? = null, c: StyleClass? = null, contents: BDI.() -> Unit = empty_contents): Unit = contentTag(BDI(this), c, id, contents)
    public fun HtmlBodyTag.bdo(id: String? = null, c: StyleClass? = null, contents: BDO.() -> Unit = empty_contents): Unit = contentTag(BDO(this), c, id, contents)
    public fun HtmlBodyTag.blockquote(id: String? = null, c: StyleClass? = null, contents: BLOCKQUOTE.() -> Unit = empty_contents): Unit = contentTag(BLOCKQUOTE(this), c, id, contents)
    public fun HtmlBodyTag.br(id: String? = null, c: StyleClass? = null, contents: BR.() -> Unit = empty_contents): Unit = contentTag(BR(this), c, id, contents)
    public fun HtmlBodyTag.button(id: String? = null, c: StyleClass? = null, contents: BUTTON.() -> Unit = empty_contents): Unit = contentTag(BUTTON(this), c, id, contents)
    public fun HtmlBodyTag.canvas(id: String? = null, c: StyleClass? = null, contents: CANVAS.() -> Unit = empty_contents): Unit = contentTag(CANVAS(this), c, id, contents)
    public fun HtmlBodyTag.cite(id: String? = null, c: StyleClass? = null, contents: CITE.() -> Unit = empty_contents): Unit = contentTag(CITE(this), c, id, contents)
    public fun HtmlBodyTag.code(id: String? = null, c: StyleClass? = null, contents: CODE.() -> Unit = empty_contents): Unit = contentTag(CODE(this), c, id, contents)
    public fun HtmlBodyTag.command(id: String? = null, c: StyleClass? = null, contents: COMMAND.() -> Unit = empty_contents): Unit = contentTag(COMMAND(this), c, id, contents)
    public fun HtmlBodyTag.datalist(id: String? = null, c: StyleClass? = null, contents: DATALIST.() -> Unit = empty_contents): Unit = contentTag(DATALIST(this), c, id, contents)
    public fun HtmlBodyTag.del(id: String? = null, c: StyleClass? = null, contents: DEL.() -> Unit = empty_contents): Unit = contentTag(DEL(this), c, id, contents)
    public fun HtmlBodyTag.details(id: String? = null, c: StyleClass? = null, contents: DETAILS.() -> Unit = empty_contents): Unit = contentTag(DETAILS(this), c, id, contents)
    public fun HtmlBodyTag.dfn(id: String? = null, c: StyleClass? = null, contents: DFN.() -> Unit = empty_contents): Unit = contentTag(DFN(this), c, id, contents)
    public fun HtmlBodyTag.dialog(id: String? = null, c: StyleClass? = null, contents: DIALOG.() -> Unit = empty_contents): Unit = contentTag(DIALOG(this), c, id, contents)
    public fun HtmlBodyTag.div(id: String? = null, c: StyleClass? = null, contents: DIV.() -> Unit = empty_contents): Unit = contentTag(DIV(this), c, id, contents)
    public fun HtmlBodyTag.dl(id: String? = null, c: StyleClass? = null, contents: DL.() -> Unit = empty_contents): Unit = contentTag(DL(this), c, id, contents)
    public fun HtmlBodyTag.em(id: String? = null, c: StyleClass? = null, contents: EM.() -> Unit = empty_contents): Unit = contentTag(EM(this), c, id, contents)
    public fun HtmlBodyTag.embed(id: String? = null, c: StyleClass? = null, contents: EMBED.() -> Unit = empty_contents): Unit = contentTag(EMBED(this), c, id, contents)
    public fun HtmlBodyTag.fieldset(id: String? = null, c: StyleClass? = null, contents: FIELDSET.() -> Unit = empty_contents): Unit = contentTag(FIELDSET(this), c, id, contents)
    public fun HtmlBodyTag.figure(id: String? = null, c: StyleClass? = null, contents: FIGURE.() -> Unit = empty_contents): Unit = contentTag(FIGURE(this), c, id, contents)
    public fun HtmlBodyTag.footer(id: String? = null, c: StyleClass? = null, contents: FOOTER.() -> Unit = empty_contents): Unit = contentTag(FOOTER(this), c, id, contents)
    public fun HtmlBodyTag.form(id: String? = null, c: StyleClass? = null, contents: FORM.() -> Unit = empty_contents): Unit = contentTag(FORM(this), c, id, contents)
    public fun HtmlBodyTag.h1(id: String? = null, c: StyleClass? = null, contents: H1.() -> Unit = empty_contents): Unit = contentTag(H1(this), c, id, contents)
    public fun HtmlBodyTag.h2(id: String? = null, c: StyleClass? = null, contents: H2.() -> Unit = empty_contents): Unit = contentTag(H2(this), c, id, contents)
    public fun HtmlBodyTag.h3(id: String? = null, c: StyleClass? = null, contents: H3.() -> Unit = empty_contents): Unit = contentTag(H3(this), c, id, contents)
    public fun HtmlBodyTag.h4(id: String? = null, c: StyleClass? = null, contents: H4.() -> Unit = empty_contents): Unit = contentTag(H4(this), c, id, contents)
    public fun HtmlBodyTag.h5(id: String? = null, c: StyleClass? = null, contents: H5.() -> Unit = empty_contents): Unit = contentTag(H5(this), c, id, contents)
    public fun HtmlBodyTag.h6(id: String? = null, c: StyleClass? = null, contents: H6.() -> Unit = empty_contents): Unit = contentTag(H6(this), c, id, contents)
    public fun HtmlBodyTag.header(id: String? = null, c: StyleClass? = null, contents: HEADER.() -> Unit = empty_contents): Unit = contentTag(HEADER(this), c, id, contents)
    public fun HtmlBodyTag.hgroup(id: String? = null, c: StyleClass? = null, contents: HGROUP.() -> Unit = empty_contents): Unit = contentTag(HGROUP(this), c, id, contents)
    public fun HtmlBodyTag.hr(id: String? = null, c: StyleClass? = null, contents: HR.() -> Unit = empty_contents): Unit = contentTag(HR(this), c, id, contents)
    public fun HtmlBodyTag.i(id: String? = null, c: StyleClass? = null, contents: I.() -> Unit = empty_contents): Unit = contentTag(I(this), c, id, contents)
    public fun HtmlBodyTag.iframe(id: String? = null, c: StyleClass? = null, contents: IFRAME.() -> Unit = empty_contents): Unit = contentTag(IFRAME(this), c, id, contents)
    public fun HtmlBodyTag.img(id: String? = null, c: StyleClass? = null, contents: IMG.() -> Unit = empty_contents): Unit = contentTag(IMG(this), c, id, contents)
    public fun HtmlBodyTag.input(id: String? = null, c: StyleClass? = null, contents: INPUT.() -> Unit = empty_contents): Unit = contentTag(INPUT(this), c, id, contents)
    public fun HtmlBodyTag.ins(id: String? = null, c: StyleClass? = null, contents: INS.() -> Unit = empty_contents): Unit = contentTag(INS(this), c, id, contents)
    public fun HtmlBodyTag.kbd(id: String? = null, c: StyleClass? = null, contents: KBD.() -> Unit = empty_contents): Unit = contentTag(KBD(this), c, id, contents)
    public fun HtmlBodyTag.keygen(id: String? = null, c: StyleClass? = null, contents: KEYGEN.() -> Unit = empty_contents): Unit = contentTag(KEYGEN(this), c, id, contents)
    public fun HtmlBodyTag.label(id: String? = null, c: StyleClass? = null, contents: LABEL.() -> Unit = empty_contents): Unit = contentTag(LABEL(this), c, id, contents)
    public fun HtmlBodyTag.map(id: String? = null, c: StyleClass? = null, contents: MAP.() -> Unit = empty_contents): Unit = contentTag(MAP(this), c, id, contents)
    public fun HtmlBodyTag.mark(id: String? = null, c: StyleClass? = null, contents: MARK.() -> Unit = empty_contents): Unit = contentTag(MARK(this), c, id, contents)
    public fun HtmlBodyTag.math(id: String? = null, c: StyleClass? = null, contents: MATH.() -> Unit = empty_contents): Unit = contentTag(MATH(this), c, id, contents)
    public fun HtmlBodyTag.menu(id: String? = null, c: StyleClass? = null, contents: MENU.() -> Unit = empty_contents): Unit = contentTag(MENU(this), c, id, contents)
    public fun HtmlBodyTag.meter(id: String? = null, c: StyleClass? = null, contents: METER.() -> Unit = empty_contents): Unit = contentTag(METER(this), c, id, contents)
    public fun HtmlBodyTag.nav(id: String? = null, c: StyleClass? = null, contents: NAV.() -> Unit = empty_contents): Unit = contentTag(NAV(this), c, id, contents)
    public fun HtmlBodyTag.object_(id: String? = null, c: StyleClass? = null, contents: OBJECT_.() -> Unit = empty_contents): Unit = contentTag(OBJECT_(this), c, id, contents)
    public fun HtmlBodyTag.ol(id: String? = null, c: StyleClass? = null, contents: OL.() -> Unit = empty_contents): Unit = contentTag(OL(this), c, id, contents)
    public fun HtmlBodyTag.output(id: String? = null, c: StyleClass? = null, contents: OUTPUT.() -> Unit = empty_contents): Unit = contentTag(OUTPUT(this), c, id, contents)
    public fun HtmlBodyTag.p(id: String? = null, c: StyleClass? = null, contents: P.() -> Unit = empty_contents): Unit = contentTag(P(this), c, id, contents)
    public fun HtmlBodyTag.pre(id: String? = null, c: StyleClass? = null, contents: PRE.() -> Unit = empty_contents): Unit = contentTag(PRE(this), c, id, contents)
    public fun HtmlBodyTag.progress(id: String? = null, c: StyleClass? = null, contents: PROGRESS.() -> Unit = empty_contents): Unit = contentTag(PROGRESS(this), c, id, contents)
    public fun HtmlBodyTag.q(id: String? = null, c: StyleClass? = null, contents: Q.() -> Unit = empty_contents): Unit = contentTag(Q(this), c, id, contents)
    public fun HtmlBodyTag.ruby(id: String? = null, c: StyleClass? = null, contents: RUBY.() -> Unit = empty_contents): Unit = contentTag(RUBY(this), c, id, contents)
    public fun HtmlBodyTag.samp(id: String? = null, c: StyleClass? = null, contents: SAMP.() -> Unit = empty_contents): Unit = contentTag(SAMP(this), c, id, contents)
    public fun HtmlBodyTag.section(id: String? = null, c: StyleClass? = null, contents: SECTION.() -> Unit = empty_contents): Unit = contentTag(SECTION(this), c, id, contents)
    public fun HtmlBodyTag.select(id: String? = null, c: StyleClass? = null, contents: SELECT.() -> Unit = empty_contents): Unit = contentTag(SELECT(this), c, id, contents)
    public fun HtmlBodyTag.small(id: String? = null, c: StyleClass? = null, contents: SMALL.() -> Unit = empty_contents): Unit = contentTag(SMALL(this), c, id, contents)
    public fun HtmlBodyTag.span(id: String? = null, c: StyleClass? = null, contents: SPAN.() -> Unit = empty_contents): Unit = contentTag(SPAN(this), c, id, contents)
    public fun HtmlBodyTag.strong(id: String? = null, c: StyleClass? = null, contents: STRONG.() -> Unit = empty_contents): Unit = contentTag(STRONG(this), c, id, contents)
    public fun HtmlBodyTag.sub(id: String? = null, c: StyleClass? = null, contents: SUB.() -> Unit = empty_contents): Unit = contentTag(SUB(this), c, id, contents)
    public fun HtmlBodyTag.sup(id: String? = null, c: StyleClass? = null, contents: SUP.() -> Unit = empty_contents): Unit = contentTag(SUP(this), c, id, contents)
    public fun HtmlBodyTag.svg(id: String? = null, c: StyleClass? = null, contents: SVG.() -> Unit = empty_contents): Unit = contentTag(SVG(this), c, id, contents)
    public fun HtmlBodyTag.table(id: String? = null, c: StyleClass? = null, contents: TABLE.() -> Unit = empty_contents): Unit = contentTag(TABLE(this), c, id, contents)
    public fun HtmlBodyTag.textarea(id: String? = null, c: StyleClass? = null, contents: TEXTAREA.() -> Unit = empty_contents): Unit = contentTag(TEXTAREA(this), c, id, contents)
    public fun HtmlBodyTag.time(id: String? = null, c: StyleClass? = null, contents: TIME.() -> Unit = empty_contents): Unit = contentTag(TIME(this), c, id, contents)
    public fun HtmlBodyTag.ul(id: String? = null, c: StyleClass? = null, contents: UL.() -> Unit = empty_contents): Unit = contentTag(UL(this), c, id, contents)
    public fun HtmlBodyTag.var_(id: String? = null, c: StyleClass? = null, contents: VAR_.() -> Unit = empty_contents): Unit = contentTag(VAR_(this), c, id, contents)
    public fun HtmlBodyTag.video(id: String? = null, c: StyleClass? = null, contents: VIDEO.() -> Unit = empty_contents): Unit = contentTag(VIDEO(this), c, id, contents)
